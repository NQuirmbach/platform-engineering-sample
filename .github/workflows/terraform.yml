name: 'Provision Azure Resources'

on:
  push:
    branches:
      - develop
      - main
    paths:
      - .github/workflows/terraform.yml
      - 'terraform/**'

env:
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v3

      # Install Terraform CLI
      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # Initialize Terraform
      - name: 'Terraform Init'
        working-directory: terraform
        run: terraform init

      # Select Terraform Workspace
      - name: 'Select Terraform Workspace'
        working-directory: terraform
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            terraform workspace select prod || terraform workspace new prod
          else
            terraform workspace select staging || terraform workspace new staging
          fi

      # Plan Terraform changes based on the workspace-specific variables
      - name: 'Terraform Plan'
        working-directory: terraform
        run: |
          var_file="staging"
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            var_file="prod"
          fi

          terraform plan -var-file=environments/${var_file}.tfvars -var 'cluster_ssh_key=${{ secrets.SSH_PUBLIC_KEY }}'

      # Apply Terraform changes in the corresponding environment
      - name: 'Terraform Apply'
        working-directory: terraform
        if: github.event_name == 'push'
        run: |
          var_file="staging"
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            var_file="prod"
          fi

          terraform apply -var-file=environments/${var_file}.tfvars -var 'cluster_ssh_key=${{ secrets.SSH_PUBLIC_KEY }}' -auto-approve
